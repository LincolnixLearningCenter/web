#+REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/2.5.0/
#+TITLE: Lincolnix Learning Center (web)
#+AUTHOR: AnderSon
#+EMAIL: son@lincolnix.net
#+OPTIONS: toc:nil num:nil


* Lincolnix Learning Center Website/Application

  http://lincolnixweb.herokuapp.com

  Create an online center for the Lincolnix Learning Center (Lincoln, NE).

** Issues

   - [ ] [[./herokulog-test.org]]

     "The page you were looking for doesn't exist."(heroku)


* Basic concept

  Build an online hub for the Lincolnix Learning Center. Beginning with a basic
  website, simply for hosting information about the school. Expand functionality
  from there to include forums for sharing, research, resources, and general 
  student communication.

* ModelViewControl

** Model

   /User/(devise), Page(static)

*** Page

    - [ ] Create Static Pages

      http://www.railstutorial.org/book/static_pages

      


**** attributes/actions

*** User

**** Devise

     - [ ] Install [[https://github.com/plataformatec/devise][Devise]]

       - [ ] add Devise gem to [[./Gemfile][Gemfile]] and bundle

             : gem 'devise'
	     : bundle 

       - [ ] run the devise generator

	 : rails generate devise:install

	 This generates a set of further instructions

	 : Some setup you must do manually if you haven't yet:

	 - [ ] Ensure you have defined default url options in your environments 
               files. 

	    [[./config/environments/development.rb]]

	   : config.action_mailer.default_url_options = { host: 'localhost:3000' }

	 - [ ] In production, :host should be set to the actual host of your application.

	    [[./config/environments/production.rb]]

	   : config.action_mailer.default_url_options = { host: 'gensched.herokuapp.com' }

	 - [ ]  Ensure you have defined root_url to *something* 

	   [[./config/routes.rb]]

	   : root 'pages#index'

	   [[./app/views/pages/index.html.erb]]


	 - [ ]  Ensure you have flash messages  
     
	   [[./app/views/layouts/application.html.erb]]

	   : <p class="notice"><%= notice %></p>
	   : <p class="alert"><%= alert %></p>

	 - [ ] Copy Devise views (for customization):

	   : rails g devise:views

	 - [ ] Add Devise to a model

	   : rails g devise MODEL

	   : rails g devise User

	 - [ ] Configure the model

	 - [ ] Migrate the database

	   : rake db:migrate
	 
       

**** Admin

     - [ ] create a migration to add admin boolean to User model


*** Shift    

**** prebuilt options

     While I am very interested in building this from scratch, I knew that there
     must be something already available as a gem. Enter [[https://github.com/bokmann/fullcalendar-rails][fullcalendar-rails]]:

     Let's give it a [[*fullcalendar-rails][shot]].

     Then I found fullcalendar-rails-engine

     "Rails engine implementation of fullcalendar jQuery plugin.
     Create, edit, delete, reschedule, resize events like google calendar."

     https://github.com/vinsol/fullcalendar-rails-engine

     This seems more full-featured and capable of meeting our needs.
     
***** fullcalendar-rails-engine

      - [ ] install
	
	: gem 'fullcalendar_engine'
	: bundle install
	: bundle exec rails g fullcalendar_engine:install

      - [ ] Declare routes

	[[./config/routes.rb]]

	: mount FullcalendarEngine::Engine => "/fullcalendar_engine"

      - [ ] Create Single Event

	: FullcalendarEngine::Event.create({ 
        :     :title => 'title', 
        :     :description => 'description', 
        :     :starttime => Time.current, 
        :     :endtime => Time.current + 10.minute
        : })

      - [ ] Create Event Series

	: FullcalendarEngine::EventSeries.create({ 
        :     :title => 'title', 
        :     :description => 'description', 
        :     :starttime => Time.current,
        :     :endtime => Time.current + 10.minute, 
        :     :period => 'daily', 
        :     :frequency => '4'
        : })

      - [ ] In the [[./config/][config directory]]

	add the [[./config/fullcalendar.yml][fullcalendar.yml]] and add 'mount_path' option in it. Please note 
        that this option is /REQUIRED/ and if it is not specified then the JS 
        and CSS of the engine would not work as desired...

	: mount_path: "<path you have mounted your engine on>"

	The engine can have its own layout, you can add 'layout' option to the 
        configuration file. Besides this, all the options which are available 
	with the fullcalendar.js are listed in the 'fullcalendar.yml.dummy' 
        file.
	

***** fullcalendar-rails

****** Install

      - [ ] install

       	: gem 'fullcalendar-rails
       	: bundle

      - [ ] require in the appropriate places

       	[[./app/assets/stylesheets/application.css.scss]]

       	: *= require fullcalendar

       	[[./app/assets/javascripts/application.js]]

       	: *= require fullcalendar.print

      - [ ] You can also include the fullcalendar.print file in your css manifest:

	  but as Ray Zane pointed out in issue #11, this will cause a problem if 
	  you try to change the colors of events.

	  An ideal solution, if you need a print stylesheet, is to create an 
	  application-print.css.scss file and include this (and other 
          print-related css) in it. You'll then need to add it to the precompile
	  array in [[./config/application.rb]]:

	  : config.assets.precompile += ['application-print.css']

	  and then in your layouts where you need it, add:

	  : <%= stylesheet_link_tag "application-print", :media => "print" %>

	  While it's not needed for this library, the original javascript 
          library's author also includes an adapter for integrating
	  Google calendars as an event source:
	  
	  //= require gcal
	  

      

****** Usage

       http://arshaw.com/fullcalendar/

       - [ ] The following script code should be placed in the head of your page

	 in application page or specific view?
	 Trying in the head of [[./app/views/layouts/application.html.erb]]

	 : <script>
         :   $(document).ready(function(){
         :    $('#calendar').fullCalendar({
	 :       // put your options and callbacks here
         :     })
         :   });
         : </script>

       - [ ] Relies on there being an element with an id of "calendar" in the 
	 body of your page. The calendar will be placed /inside/ this div:

	 : <div id='calendar'></div>

	 Attempting this at [[./app/views/pages/test.html.erb]]

	 After restarting the server, it works!

       - [ ] To display events:

	 - [ ] Using Google Calendar

	   http://arshaw.com/fullcalendar/docs/google_calendar/

	   FullCalendar can display events from a public Google Calendar. It can
	   serve as a backend that manages and persistently stores event data 
           (a feature that FullCalendar currently lacks).
	   
	   So, this may not be what we want. It would be nice if the scheduled 
           events could just be placed on a Google calendar...

	 - [ ] Using a standard JavaScript object that FullCalendar uses
	   to store information about a calendar event.

	   http://arshaw.com/fullcalendar/docs/event_data/

	   

       

**** Generation

    - [ ] Generate Shift scaffold

      : rails g scaffold Shift index pickup:string dropoff:string

**** table

     | shift   |             |                          |                                |
     |---------+-------------+--------------------------+--------------------------------|
     |         | id: integer | pickup: string?          | dropoff: string?               |
     |---------+-------------+--------------------------+--------------------------------|
     | example |           3 | Time.now.to_f.to_s       | Time.at(Time.now+60).to_f.to_s |
     |         |           7 | Time.at(60*30).to_f.to_s | Time.at(90000000).to_f.to_s    |


     - [ ] other attributes?

       [[./extra/sandbox/docs/gensched08077.png]]

       For user friendliness, needs to be able to be selected by day/date and 
       then time

     - [ ] use .to_f method to retain fractions of a second

       : Time.now => 2014-06-23 20:02:16 +0000 
       : Time.now.to_i => 1403553736
       : Time.now.to_f => 1403553736.279851
       
     - [ ] convert time to float before string?
       
       because the string can be converted back and Time.at(float)
       will return an actual time that can be used, whereas it seems
       that a string "2014-06-23 20:02:16 +0000" might not be convertable
       back to a time?

       - [ ] use the time module

	 - [ ] unsure if this is the appropriate place for it

	   [[./config/application.rb]]

	: require 'time'

	 then
	 
	 : Time.parse('2014-06-23 20:02:16 +0000') => 2014-06-23 20:02:16 +0000 
       
       


*** Rails Generation

**** Scaffolding

     - [X] Disable scaffold stylesheet creation 

       [[./config/application.rb]]

       	: config.generators do |g|
       	:   g.stylesheets false
       	: end

     - [ ] Generate a scaffold

       EXAMPLE
       : rails g scaffold Page index

     - [ ] migrate the database

       : rake db:migrate


**** Generating a Model      


** View

*** Skrollr   

    - [ ] add skrollr script

    - [ ] application.js


*** Bootstrap-sass
    
    - [-] Create custom bootstrap stylesheet

      [[./app/assets/stylesheets/bootstrap_and_customization.css.scss]]
      
      - [X] create file

            : echo "@import 'bootsrap';" > app/assets/stylesheets/bootstrap_and_customization.css.scss

      *NOTE* Place new variables before "@import 'bootstrap'"

      - [ ] Fonts

  	    /EXAMPLE:/
	    : @import url(http://fonts.googleapis.com/css?family=Roboto:400,100,100italic,700italic,700|Clicker+Script);

      - [ ] Variables

	    : $phill-grn: #3f8000;

    - [X] Require Bootstrap's Javascript, after jquery_ujs 

      [[./app/assets/javascripts/application.js]]

      : //= require jquery
      : //= require jquery_ujs
      : //= require bootstrap
      : //= require turbolinks
      : //= require_tree .


*** Assets

**** Stylesheets

**** Javascripts

     - [X] Replace turbolinks with jquery-turbolinks

       [[./app/assets/javascripts/application.js]]

       - [X] remove turbolinks line

	 : //= require turbolinks

       - [X] add jquery.turbolinks under bootstrap

	 : //= require bootstrap
	 : //= require jquery.turbolinks

**** Images   

     - [ ] css background images 


*** Views

**** Application

    [[./app/views/]]

    - [ ] add viewport

      [[./app/views/layouts/application.html.erb]]

      : <meta name="viewport" content="width=device-width, intial-scale=1.0">

**** Pages

     [[./app/views/pages/]]

***** Home

      [[./app/views/pages/home.html.erb]]



**** Layouts

**** Partials


** Control

*** Routes

    [[./app/views/][Views Directory]]

    [[./config/routes.rb]]

    - [X] create root path

      : root 'pages#index'


*** Controllers   

    [[./app/controllers/application_controller.rb]]

    [[./app/controllers/pages_controller.rb]]


* Other services

** Set up a mailer



* Application skeleton BASICS



** Useful commands

*** Rake

    : rake routes


*** Rails

    : rails console

*** Heroku

*** Git    

** Essential Files

   [[./Gemfile][Gemfile]]

** Create the default skeletal application

  - [X] create a new application

    : rails new LincolnixLearningCenter
 
  - [X] update README

    : rm README.rdoc
    : touch README.org

  - [X] copy generic rails script 

    For documentation and testing purpose of developing my default rails new 
    bash script

    : ln -s $HOME/bin/rails-new.sh rails-new.sh 
    : cp $HOME/bin/rails-new.sh rails-new 


  - [X] rename application.css to application.css.scss

    [[./app/assets/stylesheets/application.css.scss]]

    : cd app/assets/stylesheets
    : mv application.css application.css.scss

  - [X] Test the skeletal application

    - [X] Start the Rails server

    : rails s
    
    - [X] open your browser to localhost, port 3000

      : localhost:3000

  - [X] update the Gemfile

    [[./Gemfile]]

    : cat ~/RAILS-dev/DEFAULT-Gemfile > Gemfile

  - [X] update the bundle

    : bundle update
    : bundle install --without production

*** Set up Git and Heroku

**** Git

   - [X] initialize git repo

     : git init

   - [X] update .gitignore

     : echo ".env" >> .gitignore
     : echo "Procfile" >> .gitignore

   - [X] initial stage and commit of all files

     : git add .
     : git commit -am "initial commit"

   - [X] add the origin

     : git remote add origin https://github.com/LincolnixLearningCenter/web.git

   - [X] initial push

     : git push -u origin master

**** Heroku

     - [X] Create and push a new heroku app

       : heroku create
       : git push heroku master
       
     - [X] Rename the heroku app

       : heroku rename lincolnixweb
